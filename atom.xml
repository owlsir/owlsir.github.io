<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Coder]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://owlsir.com/"/>
  <updated>2015-08-31T18:15:23.938Z</updated>
  <id>http://owlsir.com/</id>
  
  <author>
    <name><![CDATA[owlsir]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[InnoDB和MyISAM存储引擎的区别]]></title>
    <link href="http://owlsir.com/2015/09/01/InnoDBMyISAMDefference/"/>
    <id>http://owlsir.com/2015/09/01/InnoDBMyISAMDefference/</id>
    <published>2015-08-31T18:02:34.000Z</published>
    <updated>2015-08-31T18:15:23.938Z</updated>
    <content type="html"><![CDATA[<p>MyISAM是MySQL默认的存储引擎。不支持事务，不支持外键，优势是访问的速度快。  </p>
<p>InnoDB存储引擎支持外键和事物安全。但是对比MyISAM存储引擎，InnoDB的写效率差一些，并且会占用更多的磁盘空间以保留数据和索引。<br><a id="more"></a></p>
<h3 id="1-_自动增长列">1. 自动增长列</h3><p>InnoDB表的自动增长列可以手动添加，如果添加的值是空或0，则实际添加的是自动增长后的值<br><img src="/css/images/20150831/innodb_auto.png" alt="innodb_auto">  </p>
<p>可以使用last_insert_id()查询当前线程最后添加记录使用的<b><u>自增值</u></b>,注意是自增值。如果一次添加多条记录，返回第一条记录的自增值。<br><img src="/css/images/20150831/last_insert_id.png" alt="innodb_auto"><br>这里返回2是因为第一次添加多条记录的时候，(1,’a’)是手动指定的id，(0,’b’)和(null,’c’)是自增值，所以返回第一条自增值也就是2。</p>
<p>可以通过下面的语句强制设置自动增长列的初始值，默认从1开始，但是此强制默认值是保存在内存中的，重启失效。<br><img src="/css/images/20150831/setoffset.png" alt="set auto_increment"></p>
<p>查询最后添加纪录<br><img src="/css/images/20150831/last_insert_id11.png" alt="last_insert_id()"></p>
<p>对于InnoDB表，自动增长列必须是索引。如果是组合索引，必须是组合索引的第一列。  </p>
<p>但是对于MyISAM表，自动增长列可以是组合索引的其他列，添加纪录后，自动增长列是按照组合索引的第一列bid进行排序后递增的。<br><img src="/css/images/20150831/index.png" alt="insert myisam_auto"></p>
<h3 id="2-_外键约束">2. 外键约束</h3><p>MySQL支持外键的存储引擎只有InnoDB，在创建外键的时候，要求父表必须有对应的索引，子表在创建外键的时候也会自动创建对应的索引。  </p>
<p>下面创建两个表，country是父表，country_id为主键索引，city是子表，country_id为外键，对应country表的主键contry_id。<br><img src="/css/images/20150831/createtable.png" alt="creat table"></p>
<p>在创建索引时，可以指定在删除、更新父表时，对子表进行相应操作，包括restrict、cascade、set null和no action。restrict和no action相同，指限制在子表有关联记录的情况下父表不能更新。cascade表示父表在更新或删除时，更新或者删除子表对应记录。set null表示父表更新或删除时，子表对应字段设置null。<br><img src="/css/images/20150831/createtable.png" alt="delete data and drop table"></p>
<p>外键信息可以通过以下命令显示<br><img src="/css/images/20150831/showtable.png" alt="show foreign key">  </p>
<h3 id="3-_存储方式">3. 存储方式</h3><p>InnoDB存储表和索引有以下两种方式</p>
<ul>
<li>使用共享空间存储。这种方式创建的表的表结构保存在.frm文件中，数据和索引保存在innodb_data_home_dir和innodb_data_file_path定义的表空间中，可以是多个文件。</li>
<li>使用多表空间存储。这种储存方式的数据文件没有大小限制，需要设置innodb_file_per_table参数，重启后只对新建表生效。这种方式的表结构仍然保存在.frm文件中，但是每个表的数据和索引单独保存在.idb文件中。  </li>
</ul>
<p>MyISAM在磁盘上存储成3个文件，其文件名都和表名相同，但扩展名分别是</p>
<ul>
<li>.frm （存储表定义）</li>
<li>.MYD （存储数据）</li>
<li>.MYI （存储索引）</li>
</ul>
<p>可以在创建表时通过data directory和index directory语句指定数据和索引存放路径<br>MyISAM的表还支持3种不同的存储格式</p>
<ul>
<li>静态表：默认存储格式，字段都是非变长字段，每个记录都是固定长度。优点存储非常迅速，容易缓存。缺点占用空间比动态表多。开发人员需要特别注意：如果保存的内容后面本来就有空格，那么在返回结果的时候也会被去掉。<br><img src="/css/images/20150831/myisamchar.png" alt="myisam char"> </li>
<li>动态表：包含变长字段，记录不是固定长度，占用空间较少，但是频繁的更新和删除会产生碎片。</li>
<li>压缩表：占据空间非常小。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>MyISAM是MySQL默认的存储引擎。不支持事务，不支持外键，优势是访问的速度快。  </p>
<p>InnoDB存储引擎支持外键和事物安全。但是对比MyISAM存储引擎，InnoDB的写效率差一些，并且会占用更多的磁盘空间以保留数据和索引。<br>]]>
    
    </summary>
    
      <category term="MySQL" scheme="http://owlsir.com/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[$_POST接收数据]]></title>
    <link href="http://owlsir.com/2015/08/30/SuperGlobalsPOST/"/>
    <id>http://owlsir.com/2015/08/30/SuperGlobalsPOST/</id>
    <published>2015-08-30T11:08:15.000Z</published>
    <updated>2015-08-30T11:30:15.913Z</updated>
    <content type="html"><![CDATA[<p>form表单的post提交都可以用$_POST接收吗？w3c给出的form标签enctype属性有3种:</p>
<ul>
<li>application/x-www-form-urlencoded</li>
<li>multipart/form-data</li>
<li>text/plain<a id="more"></a>
下图是php.net中$_POST的使用范例:<br><img src="http://7xkybl.com1.z0.glb.clouddn.com/article/img/0F27D4FF-0FA2-4180-8C0B-3C411EBCF4F5.png" alt="php.net example"><br>参考资料：<a href="http://php.net/manual/zh/reserved.variables.post" target="_blank" rel="external">php.net $_POST</a><br>通过 HTTP POST方法传递给当前脚本的变量的数组可以用$_POST接收，那么所有的post请求都可以用$_POST接收吗?</li>
</ul>
<p>参考资料：<a href="http://www.w3school.com.cn/tags/att_form_enctype.asp" target="_blank" rel="external">w3c form标签enctype属性</a><br>经过测试前两种$_post都是可以接收到数据的，但是第三种$_POST是无法接收到的。用浏览器的调试工具可以发现，当enctype属性不同时，头信息中的content-type也不同。</p>
<p><img src="http://7xkybl.com1.z0.glb.clouddn.com/article/img/application.png" alt="application/x-www-form-urlencoded"></p>
<p><img src="http://7xkybl.com1.z0.glb.clouddn.com/article/img/multipart.png" alt="multipart/form-data"></p>
<p><img src="http://7xkybl.com1.z0.glb.clouddn.com/article/img/text-plain.png" alt="text-plain"></p>
<p>用curl设置不同的content-type模拟post提交,结果$_POST只能接收文档类型为application/x-www-form-urlencoded和multipart/form-data的数据。<br>参考资料：<a href="http://tool.oschina.net/commons" target="_blank" rel="external">HTTP content-type对照表</a></p>
<p>除了以上两种文档类型其余的post方法可以用file_get_contents(‘php://input’)来接收源数据。<br>参考资料：<a href="http://php.net/manual/zh/wrappers.php.php" target="_blank" rel="external">php.net php://</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>form表单的post提交都可以用$_POST接收吗？w3c给出的form标签enctype属性有3种:</p>
<ul>
<li>application/x-www-form-urlencoded</li>
<li>multipart/form-data</li>
<li>text/plain]]>
    
    </summary>
    
      <category term="PHP" scheme="http://owlsir.com/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos 7 安装 MySQL WorkBench]]></title>
    <link href="http://owlsir.com/2015/08/30/InstallWorkBenchInCentos7/"/>
    <id>http://owlsir.com/2015/08/30/InstallWorkBenchInCentos7/</id>
    <published>2015-08-30T07:57:01.000Z</published>
    <updated>2015-08-30T11:32:34.391Z</updated>
    <content type="html"><![CDATA[<p>MySQL Workbench是一款专为MySQL设计的ER/数据库建模工具，你可以用MySQL Workbench设计和创建新的数据库图示，建立数据库文档，以及进行复杂的MySQL 迁移。该软件支持Windows和Linux系统。本文记录的是在centos 7下的yum安装过程。<br><a id="more"></a><br>首先去官网下载yum源。<br>下载地址：<a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="external">http://dev.mysql.com/downloads/repo/yum/</a><br>根据系统选择yum源，选择第一个Red Hat Enterprise Linux 7/Oricle Linux 7<br><img src="/css/images/20150830/yum.png" alt="workbench">  </p>
<p>执行以下命令安装yum源<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure></p>
<p>yum安装MySQL WorkBench<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-workbench-community</span><br></pre></td></tr></table></figure></p>
<p>安装时可能会报两个依赖的错误<br><img src="/css/images/20150830/yumerror.png" alt="error">  </p>
<p>官方文档中说明，EPEL软件仓库中包含了软件安装所依赖的包<br><img src="/css/images/20150830/EPEL.png" alt="EPEL">  </p>
<p>根据文档执行下面的命令<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span></span><br><span class="line"></span><br><span class="line">rpm -ivh epel-release-<span class="number">6</span>-<span class="number">8.</span>noarch.rpm </span><br><span class="line"></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure></p>
<p>再次yum安装MySQL WorkBench<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-workbench-community</span><br></pre></td></tr></table></figure></p>
<p>安装成功<br><img src="/css/images/20150830/wb.png" alt="wb"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>MySQL Workbench是一款专为MySQL设计的ER/数据库建模工具，你可以用MySQL Workbench设计和创建新的数据库图示，建立数据库文档，以及进行复杂的MySQL 迁移。该软件支持Windows和Linux系统。本文记录的是在centos 7下的yum安装过程。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://owlsir.com/Linux/"/>
    
  </entry>
  
</feed>
